<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title | Osus Tattoo</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,400,0,0" />
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.13.0/css/all.css">
    <script>
        let itemCount = @(Convert.ToInt32(Session["ItemCount"]));
    </script>
    <style>
        /*Text and labels*/
        .text-white-bold {
            color: #ffffff;
            font-weight: 600;
        }

        .text-white {
            color: #ffffff;
        }

        .text-lightgray {
            color: #727070;
        }

        .text-black {
            color: #111111;
        }

        .text-red {
            color: #ED1C24;
        }

        .label-totalprice {
            font-weight: 600;
            font-size: 20px !important;
        }

        .label-cartprice {
            font-weight: 600;
            font-size: 18px !important;
        }

        .label-margin {
            margin-top: 8px;
        }

        .label-productname {
            font-weight: 600;
        }

        .label-productprice {
            font-weight: 600;
            color: #ED1C24;
            font-size: 16px;
        }

        .label-productprice-light {
            font-weight: 600;
            color: #FFF200;
            font-size: 16px;
        }

        .label-origproductprice {
            text-decoration: line-through;
            color: #727070;
        }

        .label-origproductprice-white {
            text-decoration: line-through;
            color: #DED9D9;
        }

        .label-variation {
            font-size: 12px;
            color: #727070;
        }

        .product-cart-padding {
            padding: 15px 0px 15px 0px;
        }

        .navbar-nav > li {
            padding-left: 10px;
            padding-right: 10px;
        }

        .mainIcon {
            padding-left: 15px;
            padding-right: 15px;
            color: #FFF200;
            cursor: pointer;
        }

        mainBanner {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 550px;
            border: 1px solid black;
        }

        img {
            padding: inherit;
            margin: auto;
            width: 100%;
            display: block;
        }

        .header-margin {
            margin-top: 1%;
            margin-bottom: 1%;
        }

        .section-padding {
            padding: 25px 0px 25px 0px;
        }

        /*Buttons*/

        .btn-padding {
            padding: 15px 0px 0px 0px;
        }

        .btn-outline-osus {
            font-weight: 600;
            font-size: 16px;
            padding: 5px 25px 5px 25px;
        }

            .btn-outline-osus:hover {
                color: #ffffff;
                background-color: #000000;
                text-decoration: none;
            }

        .btn-outline-light-osus {
            font-weight: 600;
            font-size: 16px;
            padding: 5px 25px 5px 25px;
            color: #ffffff;
            border-width: thin;
            border-color: #ffffff;
        }

            .btn-outline-light-osus:hover {
                color: #000000;
                background-color: #ffffff;
                text-decoration: none;
                border-width: thin;
                border-color: #ffffff;
            }

        .btn-yellow {
            font-weight: 600;
            font-size: 16px;
            color: #000000;
            background-color: #FFF200;
            padding: 5px 25px 5px 25px;
            border: none;
            border-radius: 4px;
        }

            .btn-yellow:hover {
                color: #000000;
                background-color: #FDF78B;
                border: none;
                text-decoration: none;
            }

        /*Products*/
        .variation {
            background-color: #E1E1E1;
            border: #E1E1E1;
            border-style: solid;
            border-width: thin;
            text-align: center;
            margin: auto;
            cursor: pointer;
            padding: 10px 0px 10px 0px;
        }

            .variation label {
                cursor: pointer;
            }

            .variation:hover {
                background-color: #E1E1E1;
                border: #ED1C24;
                border-style: solid;
                border-width: thin;
                padding: 10px 0px 10px 0px;
            }

            .variation:disabled {
                background-color: #E1E1E1;
                color: #727070;
            }

        .spacing {
            margin-bottom: 16px;
        }
    </style>
</head>
@*<div id="toast">
    <div id="img">
        <img src="~/Content/image/logo.png" />
    </div>
    <div id="desc"></div>
</div>*@

<body style="background-color: #000002;">
    <ul class="notifications">
        <!-- li toast -->
    </ul>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm" style="background-color: #000002;">
        <div class="container header-margin">
            <a href="@Url.Action("Index", "Home", new { })">
                <img style="width: 50px;" src="~/Content/image/main-logo.svg" />
            </a>
            <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" title="Toggle navigation" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation" style="background-color: #ffffff">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                    <li>@Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "nav-link", @style = "color:white;" })</li>
                    <li>@Html.ActionLink("Products", "AllProducts", "Products", new { area = "" }, new { @class = "nav-link", @style = "color:white;" })</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home", new { area = "" }, new { @class = "nav-link", @style = "color:white;" })</li>
                </ul>
                <form class="d-flex">
                    <span class="mainIcon glyphicon glyphicon-search" data-bs-toggle="tooltip" data-bs-placement="top"
                                              data-bs-custom-class="custom-tooltip"
                                              data-bs-title="Search" aria-hidden="true"></span>
                    @if ((Osus.Core.User)Session["UserInfo"] != null)
                    {
                        <ul class="navbar-nav">
                            <li class="nav-item dropdown">
                                <span class="mainIcon glyphicon glyphicon-user" data-bs-toggle="dropdown" aria-hidden="true"></span>
                                <ul class="dropdown-menu" aria-labelledby="navbarScrollingDropdown">
                                    <li><a class="dropdown-item" href="#">Welcome <b>@(string.Format("{0} {1}", ((Osus.Core.User)Session["UserInfo"])?.Firstname, ((Osus.Core.User)Session["UserInfo"])?.Lastname))!</b></a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>@Html.ActionLink("Logout", "Logout", "Account", new { area = "" }, new { @class = "dropdown-item" })</li>
                                </ul>
                            </li>
                        </ul>
                    }
                    else
                    {
                        <a href="@Url.Action("Login", "Account")">
                            <span class="mainIcon glyphicon glyphicon-user" aria-hidden="true" data-bs-toggle="tooltip" data-bs-placement="top"
                                              data-bs-custom-class="custom-tooltip"
                                              data-bs-title="Login"></span>
                        </a>
                    }
                    <a href="@Url.Action("Cart", "Products")">
                        <span id="cart" class="mainIcon glyphicon glyphicon-shopping-cart" data-bs-toggle="tooltip" data-bs-placement="top"
                                              data-bs-custom-class="custom-tooltip"
                                              data-bs-title="Cart">
                            <span id="cartItemsCount" class="position-absolute top-0 start-100 translate-middle badge rounded-pill badge-notification bg-danger"></span>
                        </span>
                    </a>
                </form>
            </div>
        </div>
    </nav>
    <div class="mainBanner">
        <img src="~/Content/image/banner.png" />
    </div>

    @*<div class="mainBanner">
            <div class="container-img">
                <img src="~/Content/image/banner.png" />
                <div class="container">
                    <h1 class="cta-left" style="color:white">Quality tattoo supplies for your endless creativity!</h1>
                </div>
                <button class="btn-float-left btn-yellow">Shop NOW</button>
            </div>
        </div>*@


    @RenderBody()

    <div class="container" style="background-color: #000002;">
        <div class="row" style="margin-top: 3%;">
            <div class="col-1"><img src="~/Content/image/osus-logo-footer.png" class="float-sm-end" /></div>
            <div class="col-5">
                <b style="color: #ffffff;"><label class="form-label">About Us</label></b>
                <p class="form-p text-lightgray">Driven by passion and precision, our team is dedicated to delivering the best tatoo supplies in the Philippines</p>
            </div>
            <div class="col-3">
                <b style="color: #ffffff;"><label class="form-label">Quick Links</label></b>
                <p class="form-p text-lightgray">Featured Products</p>
                <p class="form-p text-lightgray">Best Sellers</p>
                <p class="form-p text-lightgray">All Products</p>
            </div>
            <div class="col-3">
                <b style="color: #ffffff;"><label class="form-label">Info</label></b>
                <p class="form-p text-lightgray">Artists</p>
                <p class="form-p text-lightgray">Events</p>
                <p class="form-p text-lightgray">Contact Us</p>
            </div>
        </div>
    </div>
    <div style="background-color: #000002;">
        <div class="container body-content">
            <hr style="background-color: #707272; height: 1px; border: 0;" />
            <footer>
                <p class="text-lightgray">&copy; @DateTime.Now.Year - Osus Tattoo</p>
            </footer>
        </div>
    </div>

</body>
</html>
<script type="text/javascript">
    $("#cartItemsCount").text(@(Convert.ToInt32(Session["ItemCount"])));
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    });
    const notifications = document.querySelector(".notifications"),
        buttons = document.querySelectorAll(".buttons .btn");

    const toastDetails = {
        timer: 5000,
        success: {
            icon: "fas fa-solid fa-check-circle",
            text: "Success: This is a success toast."
        },
        error: {
            icon: "fas fa-solid fa-times-circle",
            text: "Error: This is an error toast."
        },
        warning: {
            icon: "fas fa-solid fa-exclamation-circle",
            text: "Warning: This is a warning toast."
        },
        info: {
            icon: "fas fa-solid fa-info-circle",
            text: "Info: This is an information toast."
        }
    }

    const removeToast = (toast) => {
        toast.classList.add("hide")
        if (toast.timeoutId) clearTimeout(toast.timeoutId); // Clearing the timeout for the toast
        setTimeout(() => toast.remove(), 500) // Removing the toast after 500ms
    }

    const showToast = (msg, id) => {
        // Getting the icon and text for the toast based on the id passed
        const { icon, text } = toastDetails[id];
        const toast = document.createElement("li"); // Creating a new 'li' element for the toast
        toast.className = `toast ${id}` // Setting the classes for the toast
        // Setting the inner HTML for the toast
        toast.innerHTML = `<div class="container">
                <div class="row column">
                    <div class="col-1">
                        <i style="font-size: x-large;" class="fa-solid ${icon}"></i>
                    </div>
                    <div class="col-10">
                        <span style="font-size: large; font-weight: bold;">${msg}</span>
                    </div>
                    <div class="col-1">
                        <i class="fas fa-solid fa-times float-end" style="color: #aeb0d7;" onclick="removeToast(this.parentElement)"></i>
                    </div>
                </div>
                </div >`
        toast.classList.add("active");
        notifications.appendChild(toast); // Append the toast to the notification ul
        // Setting a timeout to remove the toast after the specified duration
        toast.timeoutId = setTimeout(() => removeToast(toast), toastDetails.timer)
    }
</script>