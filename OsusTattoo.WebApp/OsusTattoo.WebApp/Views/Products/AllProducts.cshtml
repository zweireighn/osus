@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model OsusTattoo.Models.AllProductsViewModel

<head>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,400,0,0" />

    <style>
        .items:hover {
            background: #e1e1e1;
            border: 1px solid #d0d0d0;
        }

            .items:hover .label-productname {
                overflow: visible;
                white-space: unset;
            }

        .label-productname {
            color: #000000;
            height: 50px;
            max-width: 100%;
            overflow: hidden;
            text-overflow: ellipsis;
            cursor: pointer;
            word-break: break-all;
            white-space: nowrap;
            text-align: left;
            padding: 10px;
        }

        .box {
            position: relative;
        }

        .dis-ribbon {
            position: absolute;
            right: -5px;
            top: -5px;
            z-index: 1;
            overflow: hidden;
            width: 75px;
            height: 75px;
            text-align: right;
        }

            .dis-ribbon span {
                font-size: 10px;
                font-weight: bold;
                color: #FFF;
                text-transform: uppercase;
                text-align: center;
                line-height: 20px;
                transform: rotate(45deg);
                -webkit-transform: rotate(45deg);
                width: 100px;
                display: block;
                background: #79A70A;
                background: linear-gradient(#9BC90D 0%, #79A70A 100%);
                box-shadow: 0 3px 10px -5px rgba(0, 0, 0, 1);
                position: absolute;
                top: 19px;
                right: -21px;
            }

                .dis-ribbon span::before {
                    content: "";
                    position: absolute;
                    left: 0px;
                    top: 100%;
                    z-index: -1;
                    border-left: 3px solid #79A70A;
                    border-right: 3px solid transparent;
                    border-bottom: 3px solid transparent;
                    border-top: 3px solid #79A70A;
                }

                .dis-ribbon span::after {
                    content: "";
                    position: absolute;
                    right: 0px;
                    top: 100%;
                    z-index: -1;
                    border-left: 3px solid transparent;
                    border-right: 3px solid #79A70A;
                    border-bottom: 3px solid transparent;
                    border-top: 3px solid #79A70A;
                }
    </style>
</head>

<div style="background-color: #ffffff;">
    <div class="row justify-content-md-center" style="">
        <div class="col-sm-auto" style="margin-top: 2%;">
            <h1><b style="color: #000000;">Products</b></h1>
        </div>
    </div>
    <div class="row" style="width: 95%; margin: auto; margin-top: 2%;">
        @*Nav Bar*@
        <div class="col-sm-2">
            <nav class="navbar bg-light">
                <div class="container-fluid">
                    <span class="navbar-brand mb-0 h1">Filter</span>
                </div>
                <ul class="navbar-nav">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarScrollingDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Brand
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarScrollingDropdown">
                            <li><a class="dropdown-item" href="#">Action</a></li>
                            <li><a class="dropdown-item" href="#">Another action</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="#">Something else here</a></li>
                        </ul>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarScrollingDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Availability
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarScrollingDropdown">
                            <li><a class="dropdown-item" href="#">Action</a></li>
                            <li><a class="dropdown-item" href="#">Another action</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="#">Something else here</a></li>
                        </ul>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarScrollingDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Pricing
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarScrollingDropdown">
                            <li><a class="dropdown-item" href="#">Action</a></li>
                            <li><a class="dropdown-item" href="#">Another action</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="#">Something else here</a></li>
                        </ul>
                    </li>
                </ul>

                <div class="container-fluid" style="margin-top: 5%;">
                    <span class="navbar-brand mb-0 h1">Sort</span>
                </div>

                <ul class="navbar-nav">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarScrollingDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Price
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarScrollingDropdown">
                            <li><a class="dropdown-item" href="#">Low to High</a></li>
                            <li><a class="dropdown-item" href="#">High to Low</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="#">Something else here</a></li>
                        </ul>
                    </li>
                </ul>
            </nav>
        </div>
        @*End Nav Bar*@

        @*All Products*@
        <div class="col-sm-10">
            <div class="row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-5 row-cols-xl-5">
                @foreach (OsusTattoo.Models.ProductsModel product in Model.Products)
                {
                    <a href="@Url.Action("ProductDetails", "Products", new { pId = product.Id })">
                        <div class="box">
                            @if (product.ProductionVariationList
                                .Where(x => x.MakePrimary)
                                .FirstOrDefault().Discount > 0)
                            {
                                <div class="dis-ribbon">
                                    <span>
                                        @(product.ProductionVariationList
                                    .Where(x => x.MakePrimary)
                                    .FirstOrDefault().Discount) % Off
                                </span>
                            </div>
                        }
                            <div class="col items" id="@product.Id">
                                <div class="mb-3">
                                    <img src="~/Content/image/samp-prod2.png" />
                                    <div class="label-margin productItem">
                                        <label class="form-label label-productname">
                                            @string.Format("{0} - {1}",
                                           product.Name,
                                           product.ProductionVariationList
                                           .Where(x => x.MakePrimary)
                                           .FirstOrDefault().Variant)
                                        </label>
                                        @if (product.ProductionVariationList
                                            .Where(x => x.MakePrimary)
                                            .FirstOrDefault().Discount > 0)
                                        {
                                            <label class="origPrice label-origproductprice" style="font-weight: bold; font-size: x-large;">
                                                @string.Format("₱ {0}",
                                                     (product.ProductionVariationList
                                                     .Where(x => x.MakePrimary)
                                                     .FirstOrDefault().Price / 100).ToString("0.00"))
                                            </label>
                                            <label class="form-label label-productprice" style="font-weight: bold; font-size: x-large;">
                                                @string.Format("₱ {0}",
                                                Convert.ToDecimal(product.ProductionVariationList
                                                .Where(x => x.MakePrimary)
                                                .FirstOrDefault().Price - (product.ProductionVariationList
                                                .Where(x => x.MakePrimary)
                                                .FirstOrDefault().Price / 100) * product.ProductionVariationList
                                            .Where(x => x.MakePrimary)
                                            .FirstOrDefault().Discount) / 100)
                                            </label>
                                        }
                                        else
                                        {
                                            <label class="origPrice" style="color: #000000; font-weight: bold; font-size: x-large;">
                                                @string.Format("₱ {0}",
                                                     (product.ProductionVariationList
                                                     .Where(x => x.MakePrimary)
                                                     .FirstOrDefault().Price / 100).ToString("0.00"))
                                            </label>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </a>
                }
            </div>
        </div>
        @*End All Products*@
    </div>
</div>

<script type="text/javascript">
    //Toggle the visibility of a dropdown menu
    const toggleDropdown = (dropdown, menu, isOpen) => {
        dropdown.classList.toggle("open", isOpen);
        console.log(isOpen);
        console.log(menu.scrollHeight);
        //menu.style.height = isOpen ? `${menu.scrollHeight}px` : 0;
        menu.style.height = isOpen ? "150px" : 0;
    };

    //Close all open dropdowns
    const closeAllDropdowns = () => {
        document.querySelectorAll(".dropdown-container.open").forEach((openDropdown) => {
            toggleDropdown(openDropdown, openDropdown.querySelector(".dropdown-menu"), false);
        });
    };

    //Attach click event to all dropdown toggles
    document.querySelectorAll(".dropdown-toggle-customize").forEach((dropdownToggle) => {
        dropdownToggle.addEventListener("click", (e) => {
            e.preventDefault();
            const dropdown = dropdownToggle.closest(".dropdown-container");
            const menu = dropdown.querySelector(".dropdown-menu");
            const isOpen = dropdown.classList.contains("open");
            closeAllDropdowns(); // Close all open dropdowns
            toggleDropdown(dropdown, menu, !isOpen); // Toggle current dropdown visibility
        });
    });

    //Attach click event to sidebar toggle buttons
    document.querySelectorAll(".sidebar-toggler, .sidebar-menu-button").forEach((button) => {
        button.addEventListener("click", () => {
            closeAllDropdowns(); // Close all open dropdowns
            document.querySelector(".sidebar").classList.toggle("collapsed"); // Toggle collapsed class on sidebar
        });
    });

    //Collapse sidebar by default on small screens
    if (window.innerWidth <= 1024) document.querySelector(".sidebar").classList.add("collapsed");

    $(".mainBanner").css("display", "none");
</script>